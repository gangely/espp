= Publish DHT
gangely
:TOC:

== info

* the set of scripts of the `dht-pub` subproject will publish DHT22 temperature and humidity measurements to subscribed MQTT clients, as long as battery or 5VDC measurement, and status messages; the measurements can be printed on the screen of client workstation(s) or logged to files
* the MQTT topics are: `esp32/battery`, `esp32/dht`, `esp32/status`
* 
* the installation is described in two parts:
 . the installation common to the other subprojects
 . the installations of the scripts described on this page in a short HOWTO to set up and run the scripts

== common installation

* hardware: link:https://github.com/gangely/espp/wiki/Hardware-Setup[Hardware Setup for the DHT22 and the ADC input]
* software: link:https://github.com/gangely/espp/wiki/MQTT-common-installation[MQTT common installation]

== installation of the `dht-pub` scripts 

=== on the ESP32

==== uPython scripts 
copy the files:

* `../boot/boot.py`
* `../boot/mycredentials.py`
* `../common/setrtc.py`
* `main.py`
* `dht_pub.py`

==== parameters to edit

* `boot.py`: `STAADDR` `STAMASK` `STAGW` `STADNS`
* `mycredentials.py`: `MYAPSSID` `MYAPPASS`
* `dht_pub.py`: `BROKER`

=== on the workstation(s)

==== Python scripts
copy the files:

* `bat_print.py`  `dht_print.py`  `sta_print.py`
* `bat_log.py`  `dht_log.py`  `sta_log.py`  [TODO: log to be reworked]
* `topic_print.py`

==== parameter to edit
* in `topic_print.py`, edit `BROKER`; address format can be `<hostname>` or `<111.222.333.444>`

== scripts usage

=== on the ESP32

* in REPL: `import dht_pub`
* to change the deepsleep length, adjust `SLEEPTIME`; the value is in _minutes_
* to monitor: the `esperr.log` file; TODO: rewrite log to split in day-by-day files

=== on client workstation

==== printing on terminals
* open up to 3 terminals, one for each topic, and launch the requested MQTT client: +
----
python

>>> import dht_print # or bat_print or sta_print
----
* example with `tmux`: ESP32 REPL in upper half; 3 MQTT clients in lower half +
image:Screenshot_20180320_201506.png[]

==== logging to files
* the `bat/dht/sta_log.py` scripts are usable; printing is the same than with `*_print.py`, and the messages will be appended to topic log files `espbat.log` `espdht.log` and `espsta.log`; TODO: rewrite log to split in day-by-day files



