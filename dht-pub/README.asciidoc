# Publish DHT
:TOC:

## info
* this set of scripts will publish DHT22 temperature and humidity measurements to subscribed MQTT clients, as long as battery or 5VDC measurement, and status messages
* this page describes a short HOWTO to set up and run the scripts
* more notes can be found on the Wiki:
** link:https://github.com/gangely/espp/wiki/Hardware-Setup[Hardware Setup for the DHT22 and the ADC input]
** MicroPython MQTT libraries
** Mosquitto
** link:https://github.com/gangely/espp/wiki/Paho-MQTT[Paho MQTT Python]

## software installation 

### on the ESP32

#### mqtt module
install the MicroPython MQTT libraries: TODO: wiki page

* `mqtt.simple`
* `mqtt.robust`

note: `dht_pub.py` is written with import from `mqtt.robust`, but `mqtt.simple` is ok

#### uPython scripts 
copy the files:

* `../boot/boot.py`
* `../boot/mycredentials.py`
* `../common/setrtc.py`
* `main.py`
* `dht_pub.py`

#### parameters to edit

* `boot.py`: `STAADDR` `STAMASK` `STAGW` `STADNS`
* `mycredentials.py`: `MYAPSSID` `MYAPPASS`
* `dht_pub.py`: `BROKER`

### on the broker

#### Mosquitto
* install and start `mosquitto`; TODO: wiki page

### on the client machine

#### Python and Paho MQTT
* prerequisite: have Python 2.7.9+ or Python 3.4+ installed
* link:https://github.com/gangely/espp/wiki/Paho-MQTT[install Paho MQTT client]

#### Python scripts
copy the files:

* `bat_print.py`
* `dht_print.py`
* `sta_print.py`

#### parameter to edit
* in each of the scripts, edit `BROKER`; address format can be `<hostname>` or `<111.222.333.444>`

## scripts usage

### on the ESP32

* in REPL: `import dht_pub`
* to change the deepsleep length, adjust `SLEEPTIME`; the value is in _minutes_

### on the client machine

* open up to 3 terminals, one for each topic, and launch the requested MQTT client: +
----
python

>>> import dht_print # or bat_print or sta_print
----
* example with `tmux`: ESP32 REPL in upper half; 3 MQTT clients in lower half +
image:Screenshot_20180320_201506.png[]

